<?xml version="1.0" encoding="UTF-8"?>
<web-app 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
	xsi:schemaLocation="
		http://xmlns.jcp.org/xml/ns/javaee 
		http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd
		"
	id="WebApp_ID" version="3.1">
	
	<display-name>spring-web-seed</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
 	</welcome-file-list>
	<!-- 20170808 替代org.springframework.web.util.Log4jConfigListener -->
	<listener>  
       <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>  
    </listener>
    <filter>  
       <filter-name>log4jServletFilter</filter-name>  
       <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>  
    </filter>  
    <filter-mapping>  
       <filter-name>log4jServletFilter</filter-name>  
       <url-pattern>/*</url-pattern>  
       <dispatcher>REQUEST</dispatcher>  
       <dispatcher>FORWARD</dispatcher>  
       <dispatcher>INCLUDE</dispatcher>  
       <dispatcher>ERROR</dispatcher>  
       <dispatcher>ASYNC</dispatcher><!-- Servlet 3.0 w/disabled auto-initialization only; not supported in 2.5 -->  
    </filter-mapping>
    
    <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
        	classpath*:spring/spring-*.xml
		</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
   
	<servlet>
		<servlet-name>spring-web</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-web</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	
	<!-- 
	加入该listener 能够支持 在非controller中注入Session和Request:
	@Autowired  
    private HttpSession session;  
      
    @Autowired  
    private HttpServletRequest request;  
    
    可以使用代码的方式获取reuqest对像
    HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
	 -->
	<listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
 	</listener>
  
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy    
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- spring jpa 防止session失效 -->
	<filter>    
    	<filter-name>springOpenEntityManagerInViewFilter</filter-name>    
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>    
		<init-param>    
            <!-- 指定org.springframework.orm.jpa.LocalEntityManagerFactoryBean在spring配置文件中的名称,默认值为entityManagerFactory    
            如果LocalEntityManagerFactoryBean在spring中的名称不是entityManagerFactory,该参数一定要指定,否则会出现找不到entityManagerFactory的例外 -->    
			<param-name>entityManagerFactoryBeanName</param-name>    
			<param-value>entityManagerFactory</param-value>    
		</init-param>     
	</filter>    
	<filter-mapping>    
		<filter-name>springOpenEntityManagerInViewFilter</filter-name>    
		<url-pattern>/*</url-pattern>    
	</filter-mapping>   
  
  <!-- web容器设置区 -->
	<session-config>
		<session-timeout>180</session-timeout>
	</session-config>
	<error-page>
		<error-code>403</error-code>
		<location>/403.html</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/templates/error-page/404.html</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/templates/error-page/500.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/WEB-INF/templates/error-page/500.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/templates/error-page/500.jsp</location>
	</error-page>
</web-app>