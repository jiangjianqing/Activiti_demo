<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"  
	xmlns:context="http://www.springframework.org/schema/context"    
	xmlns:mvc="http://www.springframework.org/schema/mvc"    
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans     
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	">
<!-- 20151025 非常重要：只有开启下面的context:annotation-config才可以使用spring注解 -->
	<context:annotation-config/>
		
	<!-- 20160211 添加i18n message支持，默认基于浏览器语言的先后顺序来判断-->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <!-- 国际化信息所在的文件名，在resources下 -->          
	    <!-- 2016-02-12:如果不使用hibernate-validator，则只要设置basename即可,而且不需要classpath前缀          
	    <property name="basename" value="i18n/messages" />  
	     -->  
	    <property name="basenames">  
	        <list>  	      
	        	<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->      
	        	<!-- 自定义消息一定要在最前面，注意查找顺序问题 -->
	            <value>classpath:i18n/messages</value>
	            <value>classpath:i18n/validator/ValidationMessages</value>
	            <value>classpath:org/hibernate/validator/ValidationMessages</value>  
	            <!-- 20160520 osgi环境下出现：not found for MessageSource: Can't find bundle for base name org.springframework.security.messages, locale en_US
				考虑不解决，后续直接并入国际化统一源的工作（直接从数据库访问）
				--> 
	            <value>classpath:org/springframework/security/messages</value>  	 
	                       
	        </list>  
	    </property> 
	    <!--20160213 注意：使用el表达式必须设置为false -->               
	    <property name="useCodeAsDefaultMessage" value="false" />  
	    <property name="defaultEncoding" value="UTF-8"/>  
    	<property name="cacheSeconds" value="60"/>        
	</bean>

	<mvc:interceptors>  
	    <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 --> 
	    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
	</mvc:interceptors>  
	<!-- 基于session 实现国际化  -->
	<!-- 
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
-->
	<!-- 基于cookie 实现国际化  -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
	    <!-- 设置cookieName名称，可以根据名称通过js来修改设置，也可以像上面演示的那样修改设置，默认的名称为 类名+LOCALE（即：org.springframework.web.servlet.i18n.CookieLocaleResolver.LOCALE-->
	    <property name="cookieName" value="lang"/>
	    <!-- 设置最大有效时间，如果是-1，则不存储，浏览器关闭后即失效，默认为Integer.MAX_INT-->
	    <!-- 
	    <property name="cookieMaxAge" value="100000"/>
	     -->
	    <!-- 设置cookie可见的地址，默认是“/”即对网站所有地址都是可见的，如果设为其它地址，则只有该地址或其后的地址才可见-->
	    <property name="cookiePath" value="/"/>
	</bean>

</beans>