<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"  
        xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
                            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">  
	<!-- 以下都是专用于security的配置 -->
	<!-- 
	<global-method-security pre-post-annotations="enabled" />
 -->
	<http pattern="/js/**" security="none"/>  
	<http pattern="/adminLogin.action" security="none"/>  
    <http pattern="/adminLoginSubmit.action" security="none"/>  
    <http pattern="/static/**" security="none"/>  
    <!-- 注意开启use-expressions.表示开启表达式.  -->
    <http auto-config="true" use-expressions="true" access-denied-page="/auth/denied">  
        <intercept-url pattern="/auth/login" access="permitAll"/>  
        <intercept-url pattern="/main/admin" access="hasRole('ROLE_ADMIN')"/>  
        <intercept-url pattern="/main/common" access="hasRole('ROLE_USER')"/> 
        <!-- 实现免登陆验证 -->  
        <!-- 
        <remember-me />   --> 
          
        <form-login  
                login-page="/auth/login"   
                authentication-failure-url="/auth/login?error=true"   
                default-target-url="/main/common"/> 
            
        <logout   
                invalidate-session="true"   
                logout-success-url="/auth/login"   
                logout-url="/auth/logout"/>  
            
        <session-management invalid-session-url="/auth/login">  
            <concurrency-control max-sessions="1"  error-if-maximum-exceeded="true"  />  
        </session-management>  
        <!--这里的FILTER_SECURITY_INTERCEPTOR是Spring Security默认的Filter，
			我们自定义的Filter必须在它之前，过滤客服请求
        -->
       	<!-- 20150819 暂时屏蔽，这里可以实现资源的访问策略  
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/> 
        -->  
    </http>  
    
    <authentication-manager alias="authenticationManager">  
        <authentication-provider user-service-ref="userDetailsService">   
        	<password-encoder ref="passwordEncoder"/>
        </authentication-provider>  
    </authentication-manager>  
    
    <!-- 对密码进行MD5编码 -->  
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/> 
    
    <!-- 以下为自定义bean声明  -->
    
    <beans:bean id="myFilter" class="org.security.toturial.MyFilterSecurityInterceptor">  
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager" /><!-- 资源访问决策 -->  
        <beans:property name="authenticationManager" ref="authenticationManager" /><!-- 登陆的认证 -->  
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" /><!-- 资源和权限列表 -->  
    </beans:bean>  
       
    <beans:bean name="userDetailsService" class="org.security.toturial.MyUserDetailsService">  
    </beans:bean>  
       
    <beans:bean name="myAccessDecisionManager" class="org.security.toturial.MyAccessDecisionManager">  
    </beans:bean>  
       
    <beans:bean name="mySecurityMetadataSource" class="org.security.toturial.MyInvocationSecurityMetadataSourceService">  
    </beans:bean>        
</beans:beans>  